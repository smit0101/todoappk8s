name: Deploy

on:
  push:
    branches:
      - main 
  workflow_run:
    workflows: ["Infra provision"]
    types:
      - completed     
 

env:
  DOCKER_USER: '${{secrets.DOCKER_USERNAME}}'
  DOCKER_PASSWORD: '${{secrets.DOCKER_PASSWORD}}'
  GCP_SA_KEY: '${{secrets.SERVICE_ACCOUNT_KEY}}'
  GCP_PROJECT_ID: '${{secrets.GCP_PROJECT_ID}}'
  SA: '${{secrets.SA}}'

jobs:
  IOC:
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
      
      - name: Install gke-gcloud-auth-plugin
        run: |
          gcloud --version
          gcloud components install gke-gcloud-auth-plugin
          
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.SERVICE_ACCOUNT_KEY }}'

      - name: Authenticate with Service Account Key
        run: |
          echo "$GCP_SA_KEY" > service-account-key.json
          gcloud auth activate-service-account --key-file=service-account-key.json

      - name: Set Active Account
        run: gcloud config set account $SA

      - name: Debug Service Account Key
        run: |
          echo "$SERVICE_ACCOUNT_KEY" > service-account-key.json
          cat service-account-key.json

      - name: Debug Google Cloud Authentication
        run: gcloud auth list

      - name: Get Value account
        run: gcloud config get-value account

      - name: Deploy to GKE
        run: |
            gcloud container clusters get-credentials todocluster --region us-central1-a
            kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml
            kubectl apply -f frontend-deployment.yaml
            kubectl apply -f backend-deployment.yaml
            kubectl apply -f mongodb-deployment.yaml
            kubectl apply -f frontend-service.yaml
            kubectl apply -f backend-service.yaml
            kubectl apply -f mongodb-service.yaml
            
        
          
